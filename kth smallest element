You are given an integer K and an array of distinct integers of size N. Find the Kth smallest element from the array.

solution 1:
using sort function

#include <cmath>

#include <cstdio>

#include <vector>

#include <iostream>

#include <algorithm>

using namespace std;

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   

    int t;
    cin>>t;
    while(t--){
        int n,k,c=1;
        cin>>n>>k;  
        int a[n];
        for(int i=0;i<n;i++){
            cin>>a[i];
        }
        sort(a,a+n); // sort is a inbuilt function in c++ used to sort yhe elements in ascending order by default sort function sorts the array in ascending order
        for(int i=0;i<n;i++){
            if(c==k){
                cout<<a[i]<<"\n";
                break;
            }
            else{
                c++;
            }
        }
    }
    return 0;
}

solution 2:
 
 using min heap //which is a data sturucture to store values in minimum order or maximum order
 
 #include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <bits/stdc++.h>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    int t;
    cin>>t;
    while(t--){
        int n,k;
        cin>>n>>k;
        int a[n];
        for(int i=0;i<n;i++){
            cin>>a[i];
        }
        priority_queue<int>hp;
        for(int i=0;i<k;i++){
            hp.push(a[i]);
        }
        for(int i=k;i<n;i++){
            if(hp.top()>a[i]){
                hp.pop();
                hp.push(a[i]);
            }
        }
        cout<<hp.top()<<"\n";
    }
    return 0;
}
